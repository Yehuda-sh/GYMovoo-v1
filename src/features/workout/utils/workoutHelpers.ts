/**
 * @file src/features/workout/utils/workoutHelpers.ts
 * @description ◊ô◊ï◊ò◊ô◊ú◊ô◊ò◊ô◊ñ ◊û◊ê◊ï◊§◊ò◊û◊ô◊ù ◊ú◊ê◊ô◊û◊ï◊†◊ô◊ù
 */

// ===============================================
//  Workout Feedback - ◊û◊©◊ï◊ë ◊ú◊ê◊ô◊û◊ï◊ü
// ===============================================

const FEELING_EMOJIS = new Map([
  // English
  ["challenging", "üò§"],
  ["strong", "üí™"],
  ["enjoyable", "üòä"],
  ["easy", "üò¥"],
  ["excellent", "üî•"],
  ["good", "üëç"],
  ["okay", "üòê"],
  ["tired", "üò¥"],
  ["energetic", "‚ö°"],
  // Hebrew
  ["◊û◊ê◊™◊í◊®", "üò§"],
  ["◊ó◊ñ◊ß", "üí™"],
  ["◊û◊î◊†◊î", "üòä"],
  ["◊ß◊ú", "üò¥"],
  ["◊û◊¢◊ï◊ú◊î", "üî•"],
  ["◊ò◊ï◊ë", "üëç"],
  ["◊ë◊°◊ì◊®", "üòê"],
  ["◊¢◊ô◊ô◊£", "üò¥"],
  ["◊ê◊†◊®◊í◊ò◊ô", "‚ö°"],
]);

/**
 * ◊î◊û◊®◊™ ◊™◊ó◊ï◊©◊î ◊úemoji
 */
export const getFeelingEmoji = (feeling: string): string => {
  if (!feeling || typeof feeling !== "string") return "üòê";
  return FEELING_EMOJIS.get(feeling.toLowerCase().trim()) || "üòê";
};

/**
 * ◊î◊û◊®◊™ ◊ß◊ï◊©◊ô ◊ú◊õ◊ï◊õ◊ë◊ô◊ù
 */
export const getDifficultyStars = (difficulty: number): string => {
  if (typeof difficulty !== "number" || isNaN(difficulty)) return "‚≠ê";
  const clampedDifficulty = Math.max(1, Math.min(5, Math.round(difficulty)));
  return "‚≠ê".repeat(clampedDifficulty);
};
